# This is a GitHub Actions workflow file.
# It defines a job that will automatically run your Python scraper on a schedule.

name: Run Attendance Scraper

on:
  # This allows you to run the workflow manually from the Actions tab on GitHub.
  workflow_dispatch:
  
  # This schedule is set to run at 15 minutes past the hour, every hour 
  # between 4 AM and 3 PM UTC. This corresponds to roughly 9:45 AM to 8:45 PM 
  # in India Standard Time (IST), which is a more targeted time for an attendance scraper.
  schedule:
    - cron: '15 4-15 * * *'

jobs:
  scrape:
    # The type of runner that the job will run on.
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checks out your repository under $GITHUB_WORKSPACE.
      # Updated to v4 for latest features and security.
      - name: Check out repository
        uses: actions/checkout@v4

      # Step 2: Sets up a Python environment for your script.
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # New Step: Add caching for pip dependencies to speed up installation.
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Step 3: Install Python libraries.
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      # Step 4: Install Playwright browsers.
      - name: Install Playwright Browsers
        run: python -m playwright install --with-deps
      
      # Step 5: Run the scraper.py script.
      - name: Run the scraper
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        run: python scraper.py

      # New Step: If the scraper step above fails, this will upload the error screenshot.
      # This allows you to download the image from the Actions run to debug the issue.
      - name: Upload error screenshot on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: scraper-error-screenshot
          path: scraper_error.png
